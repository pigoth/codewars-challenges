package org.example.challenge.hamming.code;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.jupiter.api.Assertions.*;

class CodeWarsTest {

    private CodeWars objTF = new CodeWars();

    @Test
    public void test_encode_function() {
        assertThat(objTF.encode("hey")).isEqualTo("000111111000111000000000000111111000000111000111000111111111111000000111");
        assertThat(objTF.encode("The Sensei told me that i can do this kata")).isEqualTo
        assertThat(objTF.encode("T3st")).isEqualTo("000111000111000111000000000000111111000000111111000111111111000000111111000111111111000111000000");
        assertThat(objTF.encode("T?st!%")).isEqualTo("000111000111000111000000000000111111111111111111000111111111000000111111000111111111000111000000000000111000000000000111000000111000000111000111");
    }

    @Test
    public void test_decode_function() {
         assertThat(objTF.decode("100111111000111001000010000111111000000111001111000111110110111000010111")).isEqualTo( "hey") ;
         assertThat(objTF.decodeisEqualTo( "The Sensei told me that i can do this kata") ;
         assertThat(objTF.decode("000111000111000111000001000000111111000000111111000111111111000000111011000111111111000111000000")).isEqualTo( "T3st") ;
         assertThat(objTF.decode("000111000111000111000010000000111111111111011111000111111111000000111111000111101111000111000000000000111000000000000111000000111000000111000111")).isEqualTo( "T?st!%") ;
    }

}
